---
title: "Satellites: Eyes in the Wartime Sky"
# subtitle: "With another comment on the thing here"
author: "James Goldie, 360info"
date: "2022-04-12"
code-fold: true
theme: style/article.scss
---

```{r}
#| label: import

library(tidyverse)
library(readxl)
library(janitor)
library(glue)
library(here)
library(pins)
library(themes360info)
library(ggtext)
library(nVennR)

# create /data/.cache
data_cache <- here("data", ".cache")
dir.create(data_cache, showWarnings = FALSE)

# download the zip file (keeping it cached if we redo this)
sat_wb <-
  board_url(c(sat = "https://www.ucsusa.org/media/11492"),
    cache = data_cache) %>%
  pin_download("sat")
```
```{r}
# import and tidy the data
# (user guide: https://s3.amazonaws.com/ucs-documents/nuclear-weapons/sat-database/4-11-17-update/User+Guide+1-1-17+wAppendix.pdf)
sats <-
  read_excel(sat_wb) %>%
  clean_names() 

sats %>%
  select(
    date_of_launch,
    name_official = current_official_name_of_satellite,
    name_alt = name_of_satellite_alternate_names,
    country_unreg = country_org_of_un_registry,
    owner = operator_owner,
    country_owner =  country_of_operator_owner,
    users, purpose, detailed_purpose,
    contractor, country_contractor = country_of_contractor,
    launch_mass_kg, dry_mass_kg) ->
sat_ownership

sat_ownership %>%
  group_by(country_owner, detailed_purpose) %>%
  summarise(
    num_sats = n(),
    total_mass_dry_kg = sum(as.numeric(dry_mass_kg), na.rm = TRUE)) ->
sat_ownership_country_purpose
```

## Main countries and purposes

Most satellites serve multiple purposes. Since I want to look at satellites by purpose, I'm going to separate those pruposes out. We've gotta be careful about not double-counting satellites if we add up total satellites, though!

```{r}
sat_ownership %>%
  separate_rows(purpose, sep = "/") %>%
  separate_rows(country_owner, sep = "/") %>%
  mutate(
    country_owner = fct_lump_n(country_owner, n = 15,
      other_level = "Other countries"),
    purpose = fct_infreq(purpose)) %>%
  group_by(country_owner, purpose) %>%
  summarise(
    num_sats = n(),
    total_mass_dry_kg = sum(as.numeric(dry_mass_kg), na.rm = TRUE)) ->
sat_ownership_separated
```

Let's have a look at country of ownership and purpose:

```{r}
sat_ownership_separated %>%
filter(country_owner != "USA") %>%
{
  ggplot(.) +
    aes(
      x = reorder(country_owner, num_sats),
      y = num_sats,
      fill = purpose) +
    geom_col() +
    # scale_fill_discrete(guide = NULL) +
    coord_flip() +
    theme_360() +
    theme(
      plot.subtitle = element_markdown(family = "Body 360info", face = "plain"),
      panel.grid.major.y = element_blank(),
      panel.grid.minor.y = element_blank(),
      legend.position = c(0.6, 0.2)) +
    labs(
      y = "Country of owner organisation (No USA)",
      x = "Number of satellites",
      title = toupper("Number of active satellites"),
      subtitle =
        "Satellites counted more than once for multiple owners and purposes",
      fill = "Purpose",
      caption = paste(
        "**CHART:** James Goldie, 360info",
        "**DATA:** Union of Concerned Scientists",
        sep = "<br>"))
} %>%
save_360plot(here("out", "sat-count-separated-nousa.png"), shape = "sdtv-portrait")

knitr::include_graphics(here("out", "sat-count-separated-nousa.png"))
```

## Overlap of commercial and government/military use

But what about users? Satellite users include `r glue_collapse(unique(sats$users), sep = ", ", last = ", and ")`. There's potentially a lot of overlap between a few discrete groups here!

Let's investigate that overlap:

```{r}

sat_ownership %>%
  mutate(rowid = 1:n()) %>%
  select(rowid, country_owner, users) %>%
  separate_rows(users, sep = "/") %>%
  filter(!is.na(users)) %>%
  # test: USA only
  filter(country_owner == "USA") %>%
  # get a vector of all the row ids in each users group
  group_by(users) %>%
  summarise(rows = list(c(rowid))) ->
us_group_overlap


# https://cran.r-project.org/web/packages/nVennR/vignettes/nVennR.html
plotVenn(us_group_overlap$rows, sNames = us_group_overlap$users,
  nCycles = 5000)

# https://observablehq.com/@simulmedia/basic-venn-diagram
```

This starts to give us an idea of the kinds of overlaps we can explore! In the case of the US, for example, there's a significant overlap between commercial use and government/military uses.

## Overlaps

If we naturally group our data by users when some are specified jointly, we'll end with single-use totals that are _exclusive_ of joint use. So for example, it may say that 3 sats are specified as Commercial use and 3 more are specified as Government + Commercial use.

In order to visualise this data with `venn.js`, we need single-use totals to be _inclusive_: that 8 are Commercial use and that 3 of those 8 are Government + Commercial.

```{r}
# do the basic aggregation
sat_ownership %>%
  select(country_owner, users) %>%
  # make sure we also catch any cases where there's both B/A and A/B listed
  mutate(users = map_chr(users,
    ~ paste(sort(unlist(str_split(.x, "/"))), collapse = "/"))) %>%
  # sum up
  group_by(country_owner, users) %>%
  summarise(size = n()) %>%
  ungroup() %>%
  rename(sets = users) ->
sat_group_data

# in order to use this data with venn.js, data for single uses needs to be
# _inclusive_ of overlaps, not exclusive. so for example, if 3 sats are civil
# only and 3 more are gov+civil, cviil should be specified as 8, not 3!
sat_group_data %>%
  separate_rows(sets, sep = "/") %>%
  group_by(country_owner, sets) %>%
  summarise(size = sum(size, na.rm = TRUE)) %>%
  ungroup ->
sat_inclusive_use

# now combine exclusive and inclusive use together again
sat_group_data %>% filter(str_detect(sets, "/"))  -> sat_joint_use
sat_group_data %>% filter(!str_detect(sets, "/")) -> sat_exclusive_use

# rows (country + user) that appear in `sat_inclusive_use` but *not*
# `sat_exclusive_use` are totally overlapped
# let's mark them so that we can remove their labels later
sat_inclusive_use %>%
 anti_join(sat_exclusive_use, by = c("country_owner", "sets")) %>%
 mutate(overlapped = TRUE) ->
sat_inclusive_overlapped

sat_inclusive_use %>%
 semi_join(sat_exclusive_use, by = c("country_owner", "sets")) %>%
 mutate(overlapped = FALSE) ->
sat_inclusive_notoverlapped

sat_joint_use %>%
  mutate(overlapped = FALSE) %>%
  bind_rows(sat_inclusive_overlapped) %>%
  bind_rows(sat_inclusive_notoverlapped) ->
sat_use_all

write_csv(sat_use_all, here("data", "sat-user-overlap-data.csv"))
write_csv(
  tibble(country = unique(sat_group_data$country_owner)),
  here("data", "sat-user-overlap-countries.csv"))
```

```{ojs}
import { countrySelect, overlapChart} from "embed-user-overlaps.qmd";

viewof countrySelect;
overlapChart;
```

### Aside: what kinds of purposes do different users put satellites to?

```{r}

sat_ownership %>%
  mutate(rowid = 1:n()) %>%
  select(rowid, users, purpose) %>%
  separate_rows(users, sep = "/") %>%
  separate_rows(purpose, sep = "/") %>%
  filter(!is.na(users), !is.na(purpose), users != "Earth Observation") %>%
  mutate(purpose = fct_infreq(purpose)) %>%
  group_by(users, purpose) %>%
  summarise(n = n()) %>%
  {
    ggplot(.) +
    aes(x = users, y = n, fill = purpose) +
    geom_col(position = "fill") +
    scale_fill_brewer(type = "qual") +
    scale_y_continuous(labels = scales::label_percent()) +
    coord_flip() +
    theme_minimal()
  }

```